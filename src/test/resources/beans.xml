<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="org.w01f.dds.service"/>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4j2Filter">
        <property name="statementExecutableSqlLogEnable" value="false"/>
        <property name="statementCloseAfterLogEnabled" value="false"/>
        <property name="statementExecuteUpdateAfterLogEnabled" value="false"/>
        <property name="statementExecuteBatchAfterLogEnabled" value="false"/>
        <property name="statementExecuteAfterLogEnabled" value="false"/>
        <property name="statementParameterSetLogEnabled" value="false"/>
        <property name="statementParameterClearLogEnable" value="false"/>
        <property name="statementCreateAfterLogEnabled" value="false"/>
        <property name="statementPrepareAfterLogEnabled" value="true"/>
        <property name="statementExecuteQueryAfterLogEnabled" value="false"/>
    </bean>
    <bean id="testDataDS1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <property name="driverClassName" value="org.sqlite.JDBC"/>
        <property name="url" value="jdbc:sqlite:db/data1.db"/>
        <property name="testWhileIdle" value="false"/>
        <!--property name="filters" value="log4j2" /-->
        <property name="proxyFilters">
            <list>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>
    <bean id="testDataDS2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <property name="driverClassName" value="org.sqlite.JDBC"/>
        <property name="url" value="jdbc:sqlite:db/data2.db"/>
        <property name="testWhileIdle" value="false"/>
        <!--property name="filters" value="log4j2" /-->
        <property name="proxyFilters">
            <list>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>
    <bean id="testIndexDS1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <property name="driverClassName" value="org.sqlite.JDBC"/>
        <property name="url" value="jdbc:sqlite:db/index1.db"/>
        <property name="testWhileIdle" value="false"/>
        <!--property name="filters" value="log4j2" /-->
        <property name="proxyFilters">
            <list>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>
    <bean id="testIndexDS2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <property name="driverClassName" value="org.sqlite.JDBC"/>
        <property name="url" value="jdbc:sqlite:db/index2.db"/>
        <property name="testWhileIdle" value="false"/>
        <!--property name="filters" value="log4j2" /-->
        <property name="proxyFilters">
            <list>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>

    <bean id="dataAccess" class="org.w01f.dds.layer4.data.DataAccess">
        <property name="dataSourceProxy">
            <bean class="org.w01f.dds.layer5.DataSourceProxy">
                <property name="dsMap">
                    <map>
                        <entry key="0" value-ref="testDataDS1"/>
                        <entry key="1" value-ref="testDataDS2"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="indexAccess" class="org.w01f.dds.layer4.index.IndexAccess">
        <property name="dataSourceProxy">
            <bean class="org.w01f.dds.layer5.DataSourceProxy">
                <property name="dsMap">
                    <map>
                        <entry key="0" value-ref="testIndexDS1"/>
                        <entry key="1" value-ref="testIndexDS2"/>
                    </map>
                </property>
            </bean>
        </property>
        <property name="slotDsMap" value="0-1023:0,1024-2047:1"/>
    </bean>
    <bean id="sqlHandler" class="org.w01f.dds.layer2.sql.SqlHandler">
        <property name="indexAccess" ref="indexAccess"/>
        <property name="dataAccess" ref="dataAccess"/>
    </bean>
    <bean id="dataSource" class="org.w01f.dds.layer1.dsproxy.DistributedDataSource">
        <property name="sqlHandler" ref="sqlHandler"/>
    </bean>

    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="tm">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:advice id="advice" transaction-manager="tm">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* org.w01f.dds.service.biz..*.*(..))" id="pointcut"/>
        <aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
    </aop:config>
</beans>
